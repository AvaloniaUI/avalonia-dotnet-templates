{
  "$schema": "http://json.schemastore.org/template",
  "author": "AvaloniaUI",
  "classifications": [ "Desktop", "Xaml", "Avalonia", "Browser", "Mobile" ],
  "description": "A cross-platform Avalonia UI Application using the MVVM pattern targeting Desktop, Mobile and Browser with WebAssembly",
  "groupidentity": "Avalonia.App.CrossPlatform",
  "identity": "Avalonia.App.CrossPlatform",
  "name": "Avalonia Cross Platform Application",
  "preferNameDirectory": true,
  "shortName": "avalonia.xplat",
  "sourceName": "AvaloniaTest.1", //based on: https://github.com/dotnet/templating/issues/1920#issuecomment-901954876
  "defaultName": "AvaloniaApplication",
  "tags": {
    "language": "C#",
    "type": "solution",
    "editorTreatAs": "solution"
  },
  "symbols": {
    "Framework": {
      "type": "parameter",
      "description": "The target framework for the project.",
      "datatype": "choice",
      "choices": [
        {
          "choice": "net8.0",
          "description": "Target net8.0"
        },
        {
          "choice": "net9.0",
          "description": "Target net9.0"
        }
      ],
      "replaces": "FrameworkParameter",
      "defaultValue": "net9.0"
    },
    "MVVMToolkit": {
      "type": "parameter",
      "description": "MVVM toolkit to use in the template.",
      "datatype": "choice",
      "choices": [
        {
          "choice": "ReactiveUI",
          "description": "Choose ReactiveUI as MVVM toolkit in the template."
        },
        {
          "choice": "CommunityToolkit",
          "description": "Choose CommunityToolkit as MVVM toolkit in the template."
        }
      ],
      "defaultValue": "CommunityToolkit"
    },
    "ReactiveUIToolkitChosen": {
      "type": "computed",
      "value": "(MVVMToolkit == \"ReactiveUI\")"
    },
    "CommunityToolkitChosen": {
      "type": "computed",
      "value": "(MVVMToolkit == \"CommunityToolkit\")"
    },
    "AvaloniaVersion": {
      "type": "parameter",
      "description": "The target version of Avalonia NuGet packages.",
      "datatype": "text",
      "replaces": "AvaloniaVersionTemplateParameter",
      "defaultValue": "11.2.1"
    },
    "UseCompiledBindings": {
      "type": "parameter",
      "description": "Defines if CompiledBindings should be enabled by default in the project (only supported in 11.0 version and newer).",
      "datatype": "bool",
      "displayName": "Use compiled Bindings",
      "defaultValue": "true"
    },
    "RemoveViewLocator": {
      "type": "parameter",
      "description": "Defines if your app will use default ViewLocator made by Avalonia Team or you are planning to use a custom one. Removing ViewLocator may be useful in code trimming scenarios. Default ViewLocator is not trimming-friendly.",
      "datatype": "bool",
      "displayName": "Remove Avalonia ViewLocator",
      "defaultValue": "false"
    },
    "UseCentralPackageManagement": {
      "type": "parameter",
      "description": "Defines if your app will use Central Package Management (CPM). If disabled, Directory.Build.props will be created with shared Avalonia version.",
      "datatype": "bool",
      "displayName": "Use Central Package Management (CPM)",
      "defaultValue": "true"
    },
    "HostIdentifier": {
      "type": "bind",
      "binding": "HostIdentifier"
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(RemoveViewLocator)",
          "exclude": [
            "AvaloniaTest.1/App.axaml",
            "AvaloniaTest.1/ViewLocator.cs"
          ],
          "rename": {
            "App.RemoveViewLocator.axaml": "App.axaml"
          }
        },
        {
          "condition": "(!RemoveViewLocator)",
          "exclude": [
            "AvaloniaTest.1/App.RemoveViewLocator.axaml"
          ]
        },
        {
          "condition": "(UseCentralPackageManagement)",
          "exclude": [
            "Directory.Build.props"
          ]
        },
        {
          "condition": "(!UseCentralPackageManagement)",
          "exclude": [
            "Directory.Packages.props"
          ]
        }
      ]
    }
  ],
  "primaryOutputs": [
    { "path": "AvaloniaTest.1/AvaloniaTest.1.csproj" },
    { "path": "AvaloniaTest.1.Android/AvaloniaTest.1.Android.csproj" },
    { "path": "AvaloniaTest.1.Desktop/AvaloniaTest.1.Desktop.csproj" },
    { "path": "AvaloniaTest.1.iOS/AvaloniaTest.1.iOS.csproj" },
    { "path": "AvaloniaTest.1.Browser/AvaloniaTest.1.Browser.csproj" },
    {
      "condition": "(HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
      "path": "AvaloniaTest.1/ViewModels/MainViewModel.cs"
    },
    {
      "condition": "(HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
      "path": "AvaloniaTest.1/Views/MainView.axaml"
    }
  ],
  "postActions": [
    {
      "id": "editor",
      "condition": "(HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
      "description": "Opens MainView and MainViewModel in the editor",
      "manualInstructions": [],
      "actionId": "84C0DA21-51C8-4541-9940-6CA19AF04EE6",
      "args": {
        "files": "5;6"
      },
      "continueOnError": true
    }
  ]
}